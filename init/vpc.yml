---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  VPC

Parameters:
  ProjectName:
    Type: String
    Default: default
    Description: "Project(Service) name"
    MaxLength: 10
    MinLength: 2
  Env:
    Type: String
    Default: dev
    Description: "Environment"
    AllowedValues:
      - dev
      - stg
      - prd
  Segment:
    Type: Number
    Default: 10
    Description: "Range of the second octet(e.g. 10.XX.0.0/16)"
    MaxValue: 255
    MinValue: 0
  Logging:
    Type: String
    Default: false
    Description: "(Option) VPC flow log to S3"
    AllowedValues:
      - true
      - false

Mappings:
  AZRegions:
    ap-northeast-1:
      AZs: ["a", "c", "d"]

Conditions:
  Logging: !Equals [ !Ref Logging, "true" ]

Resources:
  # VPC
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Sub "10.${Segment}.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-vpc"
        - Key: Env
          Value: !Ref Env

  # VPC Flow log
  FlowLog:
    Type: AWS::EC2::FlowLog
    Condition: Logging
    Properties:
      LogDestination : !Sub "arn:aws:s3:::${ProjectName}-${Env}-logs"
      LogDestinationType : s3
      ResourceId : !Ref Vpc
      ResourceType : VPC
      TrafficType : ALL

  # Subnets
  SubnetAdmPub1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.0.0/25"
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-adm-pub-uno-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetAdmPub2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.1.0/25"
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-adm-pub-due-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetAdmPri1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.0.128/25"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-adm-pri-uno-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetAdmPri2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.1.128/25"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-adm-pri-due-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetPub1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.10.0/24"
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pub-uno-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetPub2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.20.0/24"
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pub-due-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetPub3:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 2, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.30.0/24"
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pub-tre-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetPri1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.12.0/24"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pri-uno-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetPri2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.22.0/24"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pri-due-subnet"
        - Key: Env
          Value: !Ref Env
  SubnetPri3:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 2, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock: !Sub "10.${Segment}.32.0/24"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pri-tre-subnet"
        - Key: Env
          Value: !Ref Env

  # InternetGateway
  Igw:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-igw"
        - Key: Env
          Value: !Ref Env
  Gw1:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc

  # DHCP option
  Dopt:
    Type: "AWS::EC2::DHCPOptions"
    Properties:
      DomainName: !Sub "${AWS::Region}.compute.internal"
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-dopt"
        - Key: Env
          Value: !Ref Env
  DhcpAssoc1:
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    Properties:
      DhcpOptionsId: !Ref Dopt
      VpcId: !Ref Vpc

  # Network acl
  NetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref Vpc
  Acl1:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  Acl2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      NetworkAclId: !Ref NetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100

  # Subnet acl
  SubnetAcl1:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetAdmPub1
  SubnetAcl2:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetAdmPub2
  SubnetAcl3:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetAdmPri1
  SubnetAcl4:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetAdmPri2
  SubnetAcl5:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetPub1
  SubnetAcl6:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetPub2
  SubnetAcl7:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetPub3
  SubnetAcl8:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetPri1
  SubnetAcl9:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetPri2
  SubnetAcl10:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref SubnetPri3

  # Route table
  RtbPub:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pub-rtb"
        - Key: Env
          Value: !Ref Env
  RtbPri:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-pri-rtb"
        - Key: Env
          Value: !Ref Env

  # Subnet route table
  SubnetRoute1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPub
      SubnetId: !Ref SubnetAdmPub1
  SubnetRoute2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPub
      SubnetId: !Ref SubnetAdmPub2
  SubnetRoute3:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPri
      SubnetId: !Ref SubnetAdmPri1
  SubnetRoute4:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPri
      SubnetId: !Ref SubnetAdmPri2
  SubnetRoute5:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPub
      SubnetId: !Ref SubnetPub1
  SubnetRoute6:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPub
      SubnetId: !Ref SubnetPub2
  SubnetRoute7:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPub
      SubnetId: !Ref SubnetPub3
  SubnetRoute8:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPri
      SubnetId: !Ref SubnetPri1
  SubnetRoute9:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPri
      SubnetId: !Ref SubnetPri2
  SubnetRoute10:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RtbPri
      SubnetId: !Ref SubnetPri3

  # Routing
  Route:
    Type: "AWS::EC2::Route"
    DependsOn: Gw1
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref Igw
      RouteTableId: !Ref RtbPub
