---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Serverless Aurora

Parameters:
  ProjectName:
    Type: String
    Default: default
    Description: "Project(Service) name"
    MaxLength: 10
    MinLength: 2
  Env:
    Type: String
    Default: dev
    Description: "Environment"
    AllowedValues:
      - dev
      - stg
      - prd
  Role:
    Type: String
    Default: "app"
    Description: ""
  MasterUsername:
    Type: String
    Default: admin
    Description: "Database default user name"
  MasterUserPassword:
    Type: String
    Description: "Database default user password"
    NoEcho: true

Resources:
  # Security Group for serverless aurora
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: "for serverless aurora"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: { "Fn::ImportValue": !Sub "${ProjectName}-${Env}-vpc-cidr" }
          Description: "from vpc"
      SecurityGroupEgress:
        - IpProtocol : '-1'
          CidrIp: 0.0.0.0/0
      VpcId: { "Fn::ImportValue": !Sub "${ProjectName}-${Env}-vpc" }
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-${Role}-rds-sg"
        - Key: Env
          Value: !Ref Env
        - Key: Role
          Value: !Ref Role

  # Cluster Parameter Group
  ClusterParameterGroup:
    Type: "AWS::RDS::DBClusterParameterGroup"
    Properties:
      Description: "for serverless aurora"
      Family: "aurora5.6"
      Parameters:
        character_set_database: "utf8"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-${Role}-param-cluster"
        - Key: Env
          Value: !Ref Env
        - Key: Role
          Value: !Ref Role

  # Instance Parameter Group
  # ParameterGroup:
  #   Type: "AWS::RDS::DBParameterGroup"
  #   Properties:
  #     Description: "for serverless aurora"
  #     Family: "aurora5.6"
  #     Parameters:
  #       character_set_database: "utf8"
  #     Tags:
  #       - Key: Name
  #         Value: !Sub "${ProjectName}-${Env}-${Role}-param-instance"
  #       - Key: Env
  #         Value: !Ref Env
  #       - Key: Role
  #         Value: !Ref Role

  # Subnet Group
  SubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupName: !Sub "${ProjectName}-${Env}-${Role}-subnet"
      DBSubnetGroupDescription: "for serverless aurora"
      SubnetIds:
        - { "Fn::ImportValue": !Sub "${ProjectName}-${Env}-pri-uno-subnet" }
        - { "Fn::ImportValue": !Sub "${ProjectName}-${Env}-pri-due-subnet" }
        - { "Fn::ImportValue": !Sub "${ProjectName}-${Env}-pri-tri-subnet" }

  # Severless Aurora DB Cluster
  DbCuster:
    Type: "AWS::RDS::DBCluster"
    Properties:
      AvailabilityZones:
        - !Select [ "0", !GetAZs ""]
        - !Select [ "1", !GetAZs ""]
        - !Select [ "2", !GetAZs ""]
      BackupRetentionPeriod: 3
      DBClusterParameterGroupName: !Ref ClusterParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      Engine: "aurora"
      EngineMode: "serverless"
      EngineVersion: "5.6.10a"
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      PreferredBackupWindow: "14:30-15:00"
      PreferredMaintenanceWindow: "sat:15:00-sat:15:30"
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 4
        MinCapacity: 1
        SecondsUntilAutoPause: 300
      VpcSecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Role
          Value: !Ref Role

  # Serverless Aurora DB Instance
  # DbInstance1:
  #   Type: "AWS::RDS::DBInstance"
  #   Properties:
  #     AutoMinorVersionUpgrade: false
  #     DBClusterIdentifier: !Ref DbCuster
  #     DBParameterGroupName: !Ref ParameterGroup
  #     DBSecurityGroups:
  #       - !Ref SecurityGroup
  #     DBSubnetGroupName: !Ref SubnetGroup
